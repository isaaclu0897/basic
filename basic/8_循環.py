# -*- coding: utf-8 -*-
"""
Created on Tue Aug 22 22:17:52 2017

@author: VX
"""

#==============================================================================
# for 循還，將數列裡的東西丟進某個變數依次做處理
#==============================================================================
names = ['Michael', 'Bob', 'Tracy']
for name in names:
    print(name)

# sum() 的寫法
a = 0
for x in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]:
    a = a + x
print(a)

# range() 生成數列，range((起始=0)， 終止, (間隔=1))
print(list(range(10)))

a = 0
for x in range(101):
    a = a + x
print(a)

# for 循環可以這樣改寫，但若太複雜的代碼不建議這樣做
s = [x for x in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]]
print(sum(s))

#==============================================================================
# while 循環，當條件成立會持續做下去
#==============================================================================
a = 0
n = 99
while n > 0:
    a = a + n
    n = n - 2
print(a)

#==============================================================================
n = 1
while n <= 100:
    print(n)
    n = n + 1
print('END')

# 若要使while 提前結束可用break
n = 1
while n <= 100:
    if n > 10: # 当n = 11时，条件满足，执行break语句
        break # break语句会结束当前循环
    print(n)
    n = n + 1
print('END')

#==============================================================================
n = 0
while n < 10:
    n = n + 1
    print(n)

# 使用 continue 可以跳過當次循環
n = 0
while n < 10:
    n = n + 1
    if n % 2 == 0: # 如果n是偶数，执行continue语句
        continue # continue语句会直接继续下一轮循环，后续的print()语句不会执行
    print(n)
    
''' 小結
1. 循環是做重複的任務最有效率的方法。
2. break 跳出循環
3. continue 跳出當次循環，回到while
4. break 、 continue 固然好用，但使用太多會造成程式碼繁瑣，最好在條件式就寫好。
'''
